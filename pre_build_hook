#!/bin/bash

set -eux

BUILD_FOR=${BUILD_FOR:-ubuntu}
DIR="$(dirname `readlink -f $0`)"

INCLUDE_DEPENDENCIES=${INCLUDE_DEPENDENCIES:-true}

function download_dependencies {
  if [ "$INCLUDE_DEPENDENCIES" = true ]
  then
    wget --content-disposition -N -i  "${DIR}/qemu_package/${1}/dependencies.txt"
  fi
}

function build_pkg {
  case $1 in
    ubuntu)
      pushd "${DIR}/repositories/${1}/"
      download_dependencies ${1}
      popd
      cd ${DIR}/qemu
      sudo docker build -t qemu .
      container_id=`sudo docker run -d qemu`
      sudo docker cp $container_id:/qemu-keymaps_2.2.1-0ubuntu1_all.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-system_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-utils_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-user_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-system-arm_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-system-common_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-system-mips_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-system-misc_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-system-ppc_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-system-sparc_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-system-x86_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/qemu-kvm_2.2.1-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/

      cd ${DIR}/libvirt
      sudo docker build -t libvirt .
      container_id=`sudo docker run -d libvirt`
      sudo docker cp $container_id:/libvirt0_1.2.14-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/libvirt0-dbg_1.2.14-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/libvirt-bin_1.2.14-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/libvirt-dev_1.2.14-0ubuntu1_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/libvirt-doc_1.2.14-0ubuntu1_all.deb ${DIR}/repositories/ubuntu/

      cd ${DIR}/kvm
      sudo docker build -t kvm .
      container_id=`sudo docker run -d kvm`
      sudo docker cp $container_id:/linux-headers-4.1.10-rt10nfv_1.0.OPNFV_amd64.deb ${DIR}/repositories/ubuntu/
      sudo docker cp $container_id:/linux-image-4.1.10-rt10nfv_1.0.OPNFV_amd64.deb ${DIR}/repositories/ubuntu/
    ;;
    *) echo "Not supported system"; exit 1;;
  esac
}

for system in $BUILD_FOR
do
  build_pkg $system
done
